name: datadog-agent
on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - ".github/workflows/datadog-agent.yml"
      - "datadog-agent/*"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/datadog-agent.yml"
      - "datadog-agent/*"
jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV

      - name: Build an image from Dockerfile
        run: docker build -t dd-agent:${{ github.sha }} datadog-agent/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "dd-agent:${{ github.sha }}"
          format: "table"
          ignore-unfixed: false
          severity: "CRITICAL,HIGH"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: github-action-session

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push image to Amazon ECR (hash and branch name)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker tag dd-agent:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker tag dd-agent:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ BRANCH_NAME }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Push image to Amazon ECR (latest)
        if: github.event_name != 'pull_request'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker tag dd-agent:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
