name: datadog-agent
on:
  pull_request_target:
    types: [opened, synchronize]
    paths:
      - ".github/workflows/datadog-agent.yml"
      - "datadog-agent/*"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/datadog-agent.yml"
      - "datadog-agent/*"
jobs:
  build-push:
    name: Build-Push
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract branch name and commit hash for push
        shell: bash
        if: github.event_name == 'push'
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
          echo "COMMIT_HASH=${{ github.sha }}" >> $GITHUB_ENV

      - name: Extract branch name and commit hash for pr
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | sed 's/\//_/g')" >> $GITHUB_ENV
          echo "COMMIT_HASH=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Build an image from Dockerfile
        run: docker build -t dd-agent:ci-image datadog-agent/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@2b5de510862c22b735aa586acbafe850cfe75148
        with:
          image-ref: "dd-agent:ci-image"
          format: "table"
          exit-code: 1
          ignore-unfixed: false
          severity: "CRITICAL,HIGH"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1200
          role-session-name: github-actions-image-release-session

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push image to Amazon ECR (hash and branch name)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker tag dd-agent:ci-image $ECR_REGISTRY/$ECR_REPOSITORY:${COMMIT_HASH}
          docker tag dd-agent:ci-image $ECR_REGISTRY/$ECR_REPOSITORY:${BRANCH_NAME}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Push image to Amazon ECR (latest)
        if: github.event_name == 'push'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker tag dd-agent:ci-image $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
