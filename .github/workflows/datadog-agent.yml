name: datadog-agent
on:
  push:
    branches-ignore:
      - main
    paths:
      - ".github/workflows/datadog-agent.yml"
      - "datadog-agent/*"
jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV

      - name: Build an image from Dockerfile
        run: docker build -t dd-agent:${{ github.sha }} datadog-agent/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "dd-agent:${{ github.sha }}"
          format: "table"
          output: "vulnerability_comments.txt"
          ignore-unfixed: false
          severity: "CRITICAL, HIGH"

      - name: Set vulnerability_comments
        id: set_comments
        run: echo ::set-output name=VULNERABILITY_COMMENTS::$(cat vulnerability_comments.txt)

      - uses: actions/github-script@v3
        env:
          VULNERABILITY_COMMENTS: ${{ steps.set_comments.outputs.VULNERABILITY_COMMENTS }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.VULNERABILITY_COMMENTS
            })
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
      #   run: |
      #     docker tag dd-agent:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
      #     docker tag dd-agent:${{ BRANCH_NAME }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ BRANCH_NAME }}
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY
